#!/usr/bin/env python

# Copyright 2010 Tailrank, Inc.
# 
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License.  You may obtain a copy
# of the License at
# 
#      http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
# License for the specific language governing permissions and limitations under
# the License.
#
# author: David Stainton
#

__author__ = "David Stainton"
__copyright__ = "Copyright 2010 Tailrank, Inc."
__license__ = "Apache License"

import os
import sys
import time
import stat
import math
import optparse

def resolve ( value, resolution ):
    return int( math.floor( float(value)/resolution ) * resolution )

def main():

    parser = optparse.OptionParser()
    parser.add_option("--hist-log-dir", dest="hist_log_dir", default=None, action="store", type="string",
                      help="historical log directory")

    parser.add_option("--dir-to-monitor", dest="monitor_dir", default=None, action="store", type="string",
                      help="director to monitor")

    options, args = parser.parse_args()

    if not options.hist_log_dir or not options.monitor_dir:
        parser.print_help()
        return 1

    log_dir = options.hist_log_dir

    hour_secs = 60 * 60

    now = time.time()
    segment_time = resolve(now, hour_secs)
    current_log_name = "%s.log" % segment_time
    log_pathname = os.path.join(options.hist_log_dir, current_log_name)
    log_fh = open(log_pathname,'a')

    files = os.listdir(options.monitor_dir)

    for f in files:
        pathname = os.path.join(options.monitor_dir, f)
        statinfo = os.stat(pathname)
        # if it's a regular file
        if stat.S_ISREG(statinfo[stat.ST_MODE]):
            log_fh.write("%s %s %s\n" % (f, int(now), statinfo.st_size))

    log_fh.close()

if __name__ == '__main__':
    sys.exit(main())

